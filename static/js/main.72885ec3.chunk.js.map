{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","useState","time","setTime","isTimerOn","setTimerOn","startStopBtn","setStartStopBtn","useEffect","timeSubject$","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","className","Math","trunc","type","onClick","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAqFeA,MA1Ef,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEmBF,oBAAS,GAF5B,mBAENG,EAFM,KAEKC,EAFL,OAG2BJ,qBAH3B,mBAGNK,EAHM,KAGQC,EAHR,KA0Cb,OAtBAC,qBAAU,WAEND,EADEH,EACc,OAEA,SAGlB,IAAMK,EAAe,IAAIC,IASzB,OARAC,YAAS,IACNC,KAAKC,YAAUJ,IACfK,WAAU,WACLV,GACFD,GAAQ,SAACY,GAAD,OAASA,EAAM,QAItB,WACLN,EAAaO,OACbP,EAAaQ,cAEd,CAACb,IAGF,yBAASc,UAAU,MAAnB,SACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,gCACGC,KAAKC,MAAMlB,EAAO,KADrB,IAGGiB,KAAKC,MAAMlB,EAAO,KAAO,GAH5B,IAKGA,EAAO,OAEV,wBACEmB,KAAK,SACLC,QAlDU,WAClBjB,GAAYD,IAkDJmB,GAAG,aAHL,SAKGjB,IAEH,wBACEe,KAAK,SACLC,QArDS,WACJ,IAATpB,GACFG,GAAW,IAoDLkB,GAAG,OAHL,kBAOA,wBAAQF,KAAK,SAASC,QApDV,WAClBnB,EAAQ,GACRE,GAAW,IAkDL,2BCxEVmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.72885ec3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  interval,\n  Subject,\n} from 'rxjs';\nimport {\n  takeUntil,\n} from 'rxjs/operators';\n\nimport './App.css';\n\nfunction App() {\n  const [time, setTime] = useState(0);\n  const [isTimerOn, setTimerOn] = useState(false);\n  const [startStopBtn, setStartStopBtn] = useState();\n\n  const handleClick = () => {\n    setTimerOn(!isTimerOn);\n  };\n\n  const handleWait = () => {\n    if (time !== 0) {\n      setTimerOn(false);\n    }\n  };\n\n  const handleReset = () => {\n    setTime(0);\n    setTimerOn(true);\n  };\n\n  useEffect(() => {\n    if (isTimerOn) {\n      setStartStopBtn('Stop');\n    } else {\n      setStartStopBtn('Start');\n    }\n\n    const timeSubject$ = new Subject();\n    interval(10)\n      .pipe(takeUntil(timeSubject$))\n      .subscribe(() => {\n        if (isTimerOn) {\n          setTime((val) => val + 1);\n        }\n      });\n\n    return () => {\n      timeSubject$.next();\n      timeSubject$.complete();\n    };\n  }, [isTimerOn]);\n\n  return (\n    <section className=\"App\">\n      <div className=\"App-header\">\n        <div className=\"timer__wrapper\">\n          <div>\n            {Math.trunc(time / 6000)}\n            :\n            {Math.trunc(time / 100) % 60}\n            :\n            {time % 100}\n          </div>\n          <button\n            type=\"button\"\n            onClick={handleClick}\n            id=\"start-stop\"\n          >\n            {startStopBtn}\n          </button>\n          <button\n            type=\"button\"\n            onClick={handleWait}\n            id=\"wait\"\n          >\n            Wait\n          </button>\n          <button type=\"button\" onClick={handleReset}>Reset</button>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","useState","time","setTime","isTimerOn","setTimerOn","startStopButtonText","setStartStopButtonText","useEffect","timeSubject$","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","clicks$","fromEvent","document","getElementById","buff$","debounceTime","buffer","map","list","length","filter","console","log","unsubscribe","className","Math","trunc","type","onClick","id","ReactDOM","render","StrictMode"],"mappings":"4RA0IeA,MA9Hf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEmBF,oBAAS,GAF5B,mBAENG,EAFM,KAEKC,EAFL,OAGyCJ,mBAAS,IAHlD,mBAGNK,EAHM,KAGeC,EAHf,KA6Db,OA/CAC,qBAAU,WAEND,EADEH,EACqB,OAEA,SAGzB,IAAMK,EAAe,IAAIC,IASzB,OARAC,YAAS,IACNC,KAAKC,YAAUJ,IACfK,WAAU,WACLV,GACFD,GAAQ,SAACY,GAAD,OAASA,EAAM,QAItB,WACLN,EAAaO,OACbP,EAAaQ,cAEd,CAACb,IAIJI,qBAAU,WACR,IAAMU,EAAUC,YAAUC,SAASC,eAAe,QAAS,SACrDC,EAAQJ,EAAQN,KAAKW,YAAa,MAgBxC,OAdAL,EAAQN,KACNY,YAAOF,GACPG,aAAI,SAACC,GAAD,OAAUA,EAAKC,UACnBC,aAAO,SAACD,GAON,OANIA,EAAS,EACXE,QAAQC,IAAI,wBAEZD,QAAQC,IAAI,eAGI,IAAXH,MAETb,WAAU,kBAAMT,GAAW,MAEtB,kBAAMa,EAAQa,iBACpB,IAKD,yBAASC,UAAU,MAAnB,SACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,kBAAf,UAEE,sBAAKA,UAAU,iBAAf,UACGC,KAAKC,MAAMhC,EAAO,KAAQ,IACtB,qCACJ+B,KAAKC,MAAMhC,EAAO,QAGrB,qBAAK8B,UAAU,iBAAf,eAIA,sBAAKA,UAAU,iBAAf,UAEGC,KAAKC,MAAMhC,EAAO,KAAO,GAAK,IAC1B,qCACJ+B,KAAKC,MAAMhC,EAAO,KAAO,MAG5B,qBAAK8B,UAAU,iBAAf,eAIA,sBAAKA,UAAU,iBAAf,UACI9B,EAAO,IAAO,IACX,qCACJA,EAAO,UAIZ,sBAAK8B,UAAU,iBAAf,UACE,wBACEA,UAAW5B,EAAY,OAAS,GAChC+B,KAAK,SACLC,QA9FY,WACtB/B,GAAYD,IA8FFiC,GAAG,aAJL,SAMG/B,IAEH,wBACE0B,UAAU,OACVG,KAAK,SACLE,GAAG,OAHL,kBAOA,wBACEL,UAAU,QACVG,KAAK,SACLC,QAzGQ,WAClBjC,EAAQ,GACRE,GAAW,IAoGH,8BCrHZiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,W","file":"static/js/main.360ec7a8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport {\n  interval, Subject, fromEvent,\n} from 'rxjs';\n\nimport {\n  takeUntil, map, buffer, debounceTime, filter,\n} from 'rxjs/operators';\n\nimport './App.css';\n\nfunction App() {\n  const [time, setTime] = useState(0);\n  const [isTimerOn, setTimerOn] = useState(false);\n  const [startStopButtonText, setStartStopButtonText] = useState('');\n\n  const handleStartStop = () => {\n    setTimerOn(!isTimerOn);\n  };\n\n  const handleReset = () => {\n    setTime(0);\n    setTimerOn(true);\n  };\n\n  useEffect(() => {\n    if (isTimerOn) {\n      setStartStopButtonText('Stop');\n    } else {\n      setStartStopButtonText('Start');\n    }\n\n    const timeSubject$ = new Subject();\n    interval(10)\n      .pipe(takeUntil(timeSubject$))\n      .subscribe(() => {\n        if (isTimerOn) {\n          setTime((val) => val + 1);\n        }\n      });\n\n    return () => {\n      timeSubject$.next();\n      timeSubject$.complete();\n    };\n  }, [isTimerOn]);\n\n  /* ======================= DOUBLE CLICK ========================= */\n\n  useEffect(() => {\n    const clicks$ = fromEvent(document.getElementById('wait'), 'click');\n    const buff$ = clicks$.pipe(debounceTime(299));\n\n    clicks$.pipe(\n      buffer(buff$),\n      map((list) => list.length),\n      filter((length) => {\n        if (length < 2) {\n          console.log('it counts as 1 click');\n        } else {\n          console.log('that`s good');\n        }\n\n        return length === 2;\n      }),\n    ).subscribe(() => setTimerOn(false));\n\n    return () => clicks$.unsubscribe();\n  }, []);\n\n  /* ================================================================ */\n\n  return (\n    <section className=\"App\">\n      <div className=\"timer\">\n        <div className=\"timer__wrapper\">\n          <div className=\"display-wrapper\">\n\n            <div className=\"timer__display\">\n              {Math.trunc(time / 6000) < 10\n                && <span>0</span>}\n              {Math.trunc(time / 6000)}\n            </div>\n\n            <div className=\"timer__display\">\n              :\n            </div>\n\n            <div className=\"timer__display\">\n\n              {Math.trunc(time / 100) % 60 < 10\n                && <span>0</span>}\n              {Math.trunc(time / 100) % 60}\n            </div>\n\n            <div className=\"timer__display\">\n              :\n            </div>\n\n            <div className=\"timer__display\">\n              {(time % 100) < 10\n                && <span>0</span>}\n              {time % 100}\n            </div>\n          </div>\n\n          <div className=\"button-wrapper\">\n            <button\n              className={isTimerOn ? 'stop' : ''}\n              type=\"button\"\n              onClick={handleStartStop}\n              id=\"start-stop\"\n            >\n              {startStopButtonText}\n            </button>\n            <button\n              className=\"wait\"\n              type=\"button\"\n              id=\"wait\"\n            >\n              Wait\n            </button>\n            <button\n              className=\"reset\"\n              type=\"button\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          </div>\n\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}